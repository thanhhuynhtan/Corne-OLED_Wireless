/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <37 40>;
        };

        bluetooth {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };
    };

    macros {
        alt_tab: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp TAB>,
                <&macro_release>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LC(C) ESCAPE               &kp Q  &kp W  &kp E     &kp R            &kp T        &kp Y                           &kp U            &kp I      &kp O    &kp P     &mt BACKSPACE UNDERSCORE
&mt LEFT_SHIFT DOUBLE_QUOTES   &kp A  &kp S  &kp D     &kp F            &kp G        &kp H                           &kp J            &kp K      &kp L    &kp SEMI  &mt RIGHT_SHIFT COLON
&mt LEFT_CONTROL SINGLE_QUOTE  &kp Z  &kp X  &kp C     &kp V            &kp B        &kp N                           &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_CONTROL MINUS
                                             &kp LGUI  &lt 2 BACKSPACE  &kp SPACE    &mt LS(LA(LC(LEFT_GUI))) ENTER  &lt 1 BACKSPACE  &kp LCTRL
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(R)             &kp KP_DIVIDE  &kp N7  &kp N8        &kp N9                 &kp PLUS           &kp LC(SPACE)   &kp C_PLAY_PAUSE  &kp LS(LA(LC(LG(H))))  &kp LC(LA(LG(LS(L))))  &kp C_BRIGHTNESS_INC  &kp DEL
&kp LG(LEFT_BRACKET)  &kp NUMBER_0   &kp N4  &kp N5        &kp N6                 &kp KP_SUBTRACT    &kp LEFT_ARROW  &kp DOWN          &kp UP                 &kp RIGHT              &kp C_BRIGHTNESS_DEC  &kp LG(RIGHT_BRACKET)
&kp LCTRL             &kp KP_EQUAL   &kp N1  &kp N2        &kp N3                 &kp KP_MULTIPLY    &kp K_MUTE      &kp K_VOLUME_UP   &kp K_VOLUME_DOWN      &kp LEFT_ALT           &kp LCTRL             &trans
                                             &kp LEFT_GUI  &kp LG(LC(LA(LS(J))))  &alt_tab           &trans          &trans            &trans
            >;
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(Q)  &kp GRAVE        &kp LESS_THAN  &kp GREATER_THAN  &kp MINUS          &kp UNDER        &kp CARET                 &kp LEFT_BRACE         &kp RIGHT_BRACE        &kp DOLLAR  &kp SINGLE_QUOTE   &trans
&trans     &kp EXCLAMATION  &kp ASTERISK   &kp SLASH         &kp EQUAL          &kp AMPERSAND    &kp HASH                  &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp SEMI    &kp DOUBLE_QUOTES  &trans
&trans     &kp TILDE        &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT      &kp AT                    &kp COLON              &kp COMMA              &kp PERIOD  &kp PIPE           &trans
                                           &trans            &trans             &trans           &kp LC(LS(LA(LEFT_GUI)))  &kp LS(LC(LG(LA(K))))  &kp LG(F3)
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &bt BT_PRV    &bt BT_NXT    &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &studio_unlock  &trans        &trans        &bt BT_CLR    &bt BT_CLR_ALL  &trans
                        &trans  &trans  &trans    &trans          &trans        &trans
            >;
        };
    };
};
